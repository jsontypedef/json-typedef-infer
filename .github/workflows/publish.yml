on:
  release:
    types: [published]

jobs:
  publish_crate:
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
      - run: cargo publish
        env:
          CARGO_REGISTRY_TOKEN: ${{ secrets.CARGO_REGISTRY_TOKEN }}
  release_binary:
    runs-on: ${{ matrix.runs_on }}
    strategy:
      matrix:
        target:
          - x86_64-unknown-linux-gnu
          - x86_64-unknown-linux-musl
          - x86_64-apple-darwin
          - x86_64-pc-windows-gnu
        include:
          - target: x86_64-unknown-linux-gnu
            runs_on: ubuntu-latest
            artifact: jtd-infer
          - target: x86_64-unknown-linux-musl
            runs_on: ubuntu-latest
            artifact: jtd-infer
          - target: x86_64-apple-darwin
            runs_on: macos-latest
            artifact: jtd-infer
          - target: x86_64-pc-windows-gnu
            runs_on: ubuntu-latest
            artifact: jtd-infer.exe
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
      - run: cargo install cross
      - run: cross build --release --target=$TARGET
        env:
          TARGET: ${{ matrix.target }}
      - run: zip --junk-paths $TARGET.zip target/$TARGET/release/$ARTIFACT
        env:
          TARGET: ${{ matrix.target }}
          ARTIFACT: ${{ matrix.artifact }}
      - uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: ${{ matrix.target }}.zip
          asset_name: ${{ matrix.target }}.zip
          asset_content_type: application/zip
